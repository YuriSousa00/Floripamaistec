// <auto-generated />
using System;
using M1S10_Projeto.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace M1S10_Projeto.Migrations
{
    [DbContext(typeof(ProjetoContext))]
    partial class ProjetoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("M1S10_Projeto.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answers")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)")
                        .HasColumnName("Answers");

                    b.Property<int>("IdQuestion")
                        .HasColumnType("int")
                        .HasColumnName("Id_Question");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int")
                        .HasColumnName("Id_Student");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)")
                        .HasColumnName("Observation");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Answer", (string)null);
                });

            modelBuilder.Entity("M1S10_Projeto.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Disciplines")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Disciplines");

                    b.Property<int>("IdTeacher")
                        .HasColumnType("int")
                        .HasColumnName("Id_Teacher");

                    b.HasKey("Id");

                    b.ToTable("Discipline", (string)null);
                });

            modelBuilder.Entity("M1S10_Projeto.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Enunciation")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Enunciation");

                    b.Property<int>("IdQuiz")
                        .HasColumnType("int")
                        .HasColumnName("Id_Quiz");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("M1S10_Projeto.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateClose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpen")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDiscipline")
                        .HasColumnType("int")
                        .HasColumnName("Id_Discipline");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("M1S10_Projeto.Models.Student_Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDiscipline")
                        .HasColumnType("int")
                        .HasColumnName("Id_Discipline");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int")
                        .HasColumnName("Id_Student");

                    b.HasKey("Id");

                    b.ToTable("Student_Discipline", (string)null);
                });

            modelBuilder.Entity("M1S10_Projeto.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Password");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("M1S10_Projeto.Models.Student", b =>
                {
                    b.HasBaseType("M1S10_Projeto.Models.User");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_User");

                    b.Property<int>("Period")
                        .HasColumnType("Int")
                        .HasColumnName("Periodo");

                    b.Property<int>("RA")
                        .HasColumnType("int")
                        .HasColumnName("RA");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "1234567891",
                            Email = "user@hotmail.com",
                            Name = "Olivia",
                            Password = "1admin",
                            IdUser = 0,
                            Period = 0,
                            RA = 0
                        },
                        new
                        {
                            Id = 2,
                            CPF = "1223123822",
                            Email = "user2@hotmail.com",
                            Name = "Miguel",
                            Password = "123admin",
                            IdUser = 0,
                            Period = 0,
                            RA = 0
                        });
                });

            modelBuilder.Entity("M1S10_Projeto.Models.Teacher", b =>
                {
                    b.HasBaseType("M1S10_Projeto.Models.User");

                    b.Property<string>("Departament")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Departament");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_User");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("M1S10_Projeto.Models.Student", b =>
                {
                    b.HasOne("M1S10_Projeto.Models.User", null)
                        .WithOne()
                        .HasForeignKey("M1S10_Projeto.Models.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("M1S10_Projeto.Models.Teacher", b =>
                {
                    b.HasOne("M1S10_Projeto.Models.User", null)
                        .WithOne()
                        .HasForeignKey("M1S10_Projeto.Models.Teacher", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
